# エージェント間の転送関数
def transfer_to_menu_guide():
    return "メニュー案内エージェントに転送します。"

def transfer_to_reservation_manager():
    return "予約管理エージェントに転送します。"

def transfer_to_cat_info_guide():
    return "猫の情報案内エージェントに転送します。"

def transfer_to_receptionist():
    return "受付係エージェントに戻ります。"

# メニュー情報取得関数
def get_menu_info(item=None):
    menu = {
        "ふわふわパンケーキ": {"価格": 800, "説明": "ふわふわの食感が特徴の人気メニューです。"},
        "にゃんこラテ": {"価格": 600, "説明": "かわいい猫の顔のラテアートが楽しめます。"},
        "まぐろサンドイッチ": {"価格": 750, "説明": "新鮮なまぐろを使用した贅沢なサンドイッチです。"},
        "ねこねこパフェ": {"価格": 950, "説明": "猫をモチーフにしたかわいいパフェです。"}
    }
    if item:
        return menu.get(item, f"{item}の情報は見つかりませんでした。")
    return menu

# 予約管理関数
def make_reservation(date, time, people):
    # 実際のシステムでは、データベースに予約情報を保存する処理を行います
    return f"{date} {time}に{people}名様の予約を承りました。"

def cancel_reservation(reservation_id):
    # 実際のシステムでは、データベースから予約情報を削除する処理を行います
    return f"予約ID: {reservation_id}の予約をキャンセルしました。"

def check_reservation(reservation_id):
    # 実際のシステムでは、データベースから予約情報を取得する処理を行います
    return f"予約ID: {reservation_id}の予約は有効です。"

# 猫の情報取得関数
def get_cat_info(cat_name=None):
    cats = {
        "ミケ": {"種類": "三毛猫", "年齢": 3, "性別": "メス", "特徴": "人懐っこくて甘えん坊です。"},
        "タマ": {"種類": "白猫", "年齢": 5, "性別": "オス", "特徴": "おっとりした性格で、よく日向ぼっこをしています。"},
        "クロ": {"種類": "黒猫", "年齢": 2, "性別": "オス", "特徴": "好奇心旺盛で、お客様のカバンに興味津々です。"},
        "チャチャ": {"種類": "茶トラ", "年齢": 4, "性別": "メス", "特徴": "遊ぶのが大好きで、おもちゃで遊んでいることが多いです。"}
    }
    if cat_name:
        return cats.get(cat_name, f"{cat_name}という名前の猫の情報は見つかりませんでした。")
    return cats

# 解説：
# このファイルでは、エージェントが使用する各種ツール（関数）を定義しています。
# これらの関数は、エージェント間の転送、メニュー情報の取得、予約の管理、猫の情報取得などの機能を提供します。
# 実際のシステムでは、これらの関数はデータベースやAPIと連携して動作することになりますが、
# このデモでは簡単な辞書データを返すだけの実装になっています。
